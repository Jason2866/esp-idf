# pre_check stage
clang_tidy_check:
  extends:
    - .pre_check_template
    - .rules:patterns:clang_tidy
  artifacts:
    paths:
      - clang_tidy_reports/
    when: always
    expire_in: 1 day
  variables:
    IDF_TOOLCHAIN: clang
  script:
    - run_cmd idf_clang_tidy $(cat tools/ci/clang_tidy_dirs.txt | xargs)
      --output-path clang_tidy_reports
      --limit-file tools/ci/static-analysis-rules.yml
      --xtensa-include-dir

check_pylint:
  extends:
    - .pre_check_template
    - .rules:patterns:python-files
    - .before_script_minimal
  image: $SONARQUBE_SCANNER_IMAGE
  artifacts:
    when: always
    paths:
      - pylint-report.txt
    expire_in: 1 week
  script:
    - export PYTHONPATH="$IDF_PATH/tools:$IDF_PATH/tools/ci/python_packages:$PYTHONPATH"
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        export files=$(python ${CI_PROJECT_DIR}/tools/ci/ci_get_mr_info.py files ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} | grep ".py");
      else
        export files=$(find . -iname "*.py" -print);
      fi
    - pylint --rcfile=.pylintrc $files -r n --output-format=parseable > pylint-report.txt || exit 0
